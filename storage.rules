rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    function isSignedIn() {
      return request.auth != null;
    }

    // --- Posts media: posts/{uid}/{postId}/{fileName}
    // Public read; only the owner can write.
    match /posts/{uid}/{postId}/{fileName} {
      allow read: if true;
      allow write: if isSignedIn() && request.auth.uid == uid;
    }

    // --- Recipe cover: recipeImages/{uid}/{recipeId}
    // Require that the recipe doc exists and belongs to the uploader.
    match /recipeImages/{uid}/{recipeId} {
      allow read: if true;
      allow write: if isSignedIn()
                   && request.auth.uid == uid
                   && exists(/databases/(default)/documents/recipes/$(recipeId))
                   && get(/databases/(default)/documents/recipes/$(recipeId)).data.uid == uid;
    }

    // --- Optional gallery: recipeImages/{uid}/{recipeId}/gallery/{fileName}
    match /recipeImages/{uid}/{recipeId}/gallery/{fileName} {
      allow read: if true;
      allow write: if isSignedIn()
                   && request.auth.uid == uid
                   && exists(/databases/(default)/documents/recipes/$(recipeId))
                   && get(/databases/(default)/documents/recipes/$(recipeId)).data.uid == uid;
    }

    // --- Deny everything else
    match /{allPaths=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}
