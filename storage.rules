rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Posts media: posts/{uid}/{postId}/{fileName}
    match /posts/{uid}/{postId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // Recipe cover: recipeImages/{uid}/{recipeId}
    match /recipeImages/{uid}/{recipeId} {
      allow read: if true;
      allow write: if request.auth != null
        && request.auth.uid == uid
        && exists(/databases/(default)/documents/recipes/$(recipeId))
        && get(/databases/(default)/documents/recipes/$(recipeId)).data.uid == uid;
    }

    // (optional) gallery files: recipeImages/{uid}/{recipeId}/gallery/{fileName}
    match /recipeImages/{uid}/{recipeId}/gallery/{fileName} {
      allow read: if true;
      allow write: if request.auth != null
        && request.auth.uid == uid
        && exists(/databases/(default)/documents/recipes/$(recipeId))
        && get(/databases/(default)/documents/recipes/$(recipeId)).data.uid == uid;
    }
    // Public read for post media, only owner can write
    match /posts/{uid}/{postId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // Public read for recipe images, only owner can write
    match /recipeImages/{uid}/{rid} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == uid;
    }
     // Public read of uploaded media (optional; you can restrict if you want)
    match /posts/{uid}/{postId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    match /recipeImages/{uid}/{recipeId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // Fallback: deny everything else
    match /{allPaths=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}
